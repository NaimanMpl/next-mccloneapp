// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  engineType = "library"
  provider   = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  id          String       @id @default(uuid())
  name        String       @unique
  email       String       @unique
  password    String
  createdAt   DateTime     @default(now())
  admin       Boolean      @default(false)
  skin        Skin?
  roleId      Int          @default(1)
  role        Role         @relation(fields: [roleId], references: [id], onDelete: Cascade)
  permissions Permission[]
  profileIconUrl String?
}

model Skin {
  id     Int    @id @default(autoincrement())
  link   String
  user   Users  @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String @unique
}

enum ServerStatus {
  ONLINE
  OFFLINE
  MAINTENANCE
}

model ServerInfo {
  id            Int          @id @default(autoincrement())
  status        ServerStatus
  ip            String
  onlinePlayers Int
}

model Role {
  id          Int          @id @default(autoincrement())
  name        String @unique
  score       Int
  Users       Users[]
  permissions Permission[]
}

model Permission {
  id       Int    @id @default(autoincrement())
  name     String
  authorId String
  author   Users  @relation(fields: [authorId], references: [id])
  roleId   Int
  role     Role   @relation(fields: [roleId], references: [id])
}
